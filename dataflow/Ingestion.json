{
	"name": "Ingestion",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_movies_csv",
						"type": "DatasetReference"
					},
					"name": "RawMoviesCSV"
				},
				{
					"dataset": {
						"referenceName": "raw_movies_json",
						"type": "DatasetReference"
					},
					"name": "RawMoviesJson"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ingest_movies_csv",
						"type": "DatasetReference"
					},
					"name": "PutInIngestedMoviesCSV1"
				},
				{
					"dataset": {
						"referenceName": "ingest_movies_csv",
						"type": "DatasetReference"
					},
					"name": "PutInIngestedMoviesCSV2"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          movie_id as string,",
				"          movie_name as string,",
				"          year as string,",
				"          certificate as string,",
				"          runtime as string,",
				"          genre as string,",
				"          rating as string,",
				"          description as string,",
				"          director as string,",
				"          director_id as string,",
				"          star as string,",
				"          star_id as string,",
				"          votes as string,",
				"          {gross(in $)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 20,",
				"     ignoreNoFilesFound: false,",
				"     multiLineRow: true,",
				"     wildcardPaths:['*']) ~> RawMoviesCSV",
				"source(output(",
				"          movie_id as string,",
				"          movie_name as string,",
				"          year as integer,",
				"          certificate as string,",
				"          runtime as string,",
				"          genre as string,",
				"          rating as double,",
				"          description as string,",
				"          director as string,",
				"          director_id as string,",
				"          star as string,",
				"          star_id as string,",
				"          votes as double,",
				"          {gross(in $)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 20,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments',",
				"     backslashEscape: true) ~> RawMoviesJson",
				"RawMoviesCSV sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     filePattern:'from_csv',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     quoteAll: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          movie_id,",
				"          movie_name,",
				"          year,",
				"          certificate,",
				"          runtime,",
				"          genre,",
				"          rating,",
				"          description,",
				"          votes,",
				"          {gross(in $)}",
				"     )) ~> PutInIngestedMoviesCSV1",
				"RawMoviesJson sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     filePattern:'from_json',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     quoteAll: true,",
				"     saveOrder: 2,",
				"     mapColumn(",
				"          movie_id,",
				"          movie_name,",
				"          year,",
				"          certificate,",
				"          runtime,",
				"          genre,",
				"          rating,",
				"          description,",
				"          votes,",
				"          {gross(in $)}",
				"     )) ~> PutInIngestedMoviesCSV2"
			]
		}
	}
}